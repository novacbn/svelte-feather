/* src/components/PageHeader.svelte generated by Svelte v3.22.3 */
import { SvelteComponentDev, add_location, append_dev, attr_dev, detach_dev, dispatch_dev, element, init, insert_dev, noop, safe_not_equal, space, text, validate_slots } from "/svelte-feather/dist/web_modules/svelte/internal.js";
const file = "src/components/PageHeader.svelte";

function add_css() {
  var style = element("style");
  style.id = "svelte-13v67vm-style";
  style.textContent = "header.svelte-13v67vm{padding-left:7.5rem;padding-right:7.5rem}code.svelte-13v67vm{padding-top:1.25rem;padding-bottom:1.25rem;user-select:all}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFnZUhlYWRlci5zdmVsdGUiLCJzb3VyY2VzIjpbIlBhZ2VIZWFkZXIuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzdHlsZT5cbiAgICBoZWFkZXIge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDcuNXJlbTtcbiAgICAgICAgcGFkZGluZy1yaWdodDogNy41cmVtO1xuICAgIH1cblxuICAgIGNvZGUge1xuICAgICAgICBwYWRkaW5nLXRvcDogMS4yNXJlbTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEuMjVyZW07XG5cbiAgICAgICAgdXNlci1zZWxlY3Q6IGFsbDtcbiAgICB9XG48L3N0eWxlPlxuXG48aGVhZGVyIGNsYXNzPVwiY29udGFpbmVyIHRleHQtY2VudGVyXCI+XG4gICAgPGgyPlxuICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9mZWF0aGVyaWNvbnMuY29tL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIj5cbiAgICAgICAgICAgIEZlYXRoZXIgSWNvbnNcbiAgICAgICAgPC9hPlxuICAgICAgICBhc1xuICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9zdmVsdGUuZGV2L1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIj5TdmVsdGU8L2E+XG4gICAgICAgIENvbXBvbmVudHNcbiAgICA8L2gyPlxuXG4gICAgPGNvZGUgY2xhc3M9XCJjYXJkXCI+bnBtIGluc3RhbGwgaHR0cHM6Ly9naXRodWIuY29tL25vdmFjYm4vc3ZlbHRlLWZlYXRoZXIjMC4wLjE8L2NvZGU+XG48L2hlYWRlcj5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSSxNQUFNLGVBQUMsQ0FBQyxBQUNKLFlBQVksQ0FBRSxNQUFNLENBQ3BCLGFBQWEsQ0FBRSxNQUFNLEFBQ3pCLENBQUMsQUFFRCxJQUFJLGVBQUMsQ0FBQyxBQUNGLFdBQVcsQ0FBRSxPQUFPLENBQ3BCLGNBQWMsQ0FBRSxPQUFPLENBRXZCLFdBQVcsQ0FBRSxHQUFHLEFBQ3BCLENBQUMifQ== */";
  append_dev(document.head, style);
}

function create_fragment(ctx) {
  let header;
  let h2;
  let a0;
  let t1;
  let a1;
  let t3;
  let t4;
  let code;
  const block = {
    c: function create() {
      header = element("header");
      h2 = element("h2");
      a0 = element("a");
      a0.textContent = "Feather Icons";
      t1 = text("\n        as\n        ");
      a1 = element("a");
      a1.textContent = "Svelte";
      t3 = text("\n        Components");
      t4 = space();
      code = element("code");
      code.textContent = "npm install https://github.com/novacbn/svelte-feather#0.0.1";
      attr_dev(a0, "href", "https://feathericons.com/");
      attr_dev(a0, "target", "_blank");
      attr_dev(a0, "rel", "noopener noreferrer");
      add_location(a0, file, 16, 8, 262);
      attr_dev(a1, "href", "https://svelte.dev/");
      attr_dev(a1, "target", "_blank");
      attr_dev(a1, "rel", "noopener noreferrer");
      add_location(a1, file, 20, 8, 399);
      add_location(h2, file, 15, 4, 249);
      attr_dev(code, "class", "card svelte-13v67vm");
      add_location(code, file, 24, 4, 516);
      attr_dev(header, "class", "container text-center svelte-13v67vm");
      add_location(header, file, 14, 0, 206);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, header, anchor);
      append_dev(header, h2);
      append_dev(h2, a0);
      append_dev(h2, t1);
      append_dev(h2, a1);
      append_dev(h2, t3);
      append_dev(header, t4);
      append_dev(header, code);
    },
    p: noop,
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching) detach_dev(header);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}

function instance($$self, $$props) {
  const writable_props = [];
  Object.keys($$props).forEach(key => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<PageHeader> was created with unknown prop '${key}'`);
  });
  let {
    $$slots = {},
    $$scope
  } = $$props;
  validate_slots("PageHeader", $$slots, []);
  return [];
}

class PageHeader extends SvelteComponentDev {
  constructor(options) {
    super(options);
    if (!document.getElementById("svelte-13v67vm-style")) add_css();
    init(this, options, instance, create_fragment, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "PageHeader",
      options,
      id: create_fragment.name
    });
  }

}

export default PageHeader;